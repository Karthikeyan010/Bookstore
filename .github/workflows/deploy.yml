name: CI/CD for React + Spring Boot on GKE

on:
  push:
    branches:
      - main 

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  REACT_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/bookstore-frontend
  SPRING_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/cart-service
  CATALOG_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/catalog-service

jobs:
  build:
    name: Build & Deploy to GKE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures full repo checkout

      - name: Debug - Verify Repository Structure
        run: |
          echo "Current Directory: $(pwd)"
          echo "List of files and directories:"
          ls -R  # Print all files & directories for debugging

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Build & Push React Frontend Docker Image
        run: |
          docker build -t $REACT_IMAGE:latest ./bookstore-frontend  # Updated path
          docker push $REACT_IMAGE:latest

      - name: Build & Push Spring Boot Backend (Cart Service) Docker Image
        run: |
          docker build -t $SPRING_IMAGE:latest ./cart-service  # Updated path
          docker push $SPRING_IMAGE:latest

      - name: Build & Push Catalog Service Docker Image
        run: |
          docker build -t $CATALOG_IMAGE:latest ./catalog-service  # Updated path
          docker push $CATALOG_IMAGE:latest

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

      - name: Verify Kubernetes Cluster Connection
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/  # Updated path to Kubernetes manifests
          kubectl rollout status deployment/bookstore-frontend
          kubectl rollout status deployment/cart-service
          kubectl rollout status deployment/catalog-service
