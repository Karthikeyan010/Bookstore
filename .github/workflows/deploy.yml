name: CI/CD for React + Spring Boot on GKE

on:
  push:
    branches:
      - main 

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  COMMIT_SHA: ${{ github.sha }} # Unique image tag per commit
  REACT_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/bookstore-frontend
  SPRING_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/cart-service
  CATALOG_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/catalog-service

jobs:
  build:
    name: Build & Deploy to GKE
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensures at least 2 commits for comparison

      - name: üõ† Debug - Verify Repository Structure
        run: |
          echo "Current Directory: $(pwd)"
          echo "List of files and directories:"
          ls -R  # Print all files & directories for debugging

      - name: üîé Detect Changes
        id: changes
        run: |
          echo "Checking for changes..."

          # Check if there is a previous commit
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          else
            echo "No previous commit found. Running a full deployment."
            echo "FULL_DEPLOYMENT=true" >> $GITHUB_ENV
          fi

          echo "Changed files: $CHANGED_FILES"

          # Detect application source code changes
          if echo "$CHANGED_FILES" | grep -q "bookstore-frontend/"; then
            echo "REACT_CHANGED=true" >> $GITHUB_ENV
          fi

          if echo "$CHANGED_FILES" | grep -q "cart-service/"; then
            echo "SPRING_CHANGED=true" >> $GITHUB_ENV
          fi

          if echo "$CHANGED_FILES" | grep -q "catalog-service/"; then
            echo "CATALOG_CHANGED=true" >> $GITHUB_ENV
          fi

          # Detect Kubernetes deployment file changes
          if echo "$CHANGED_FILES" | grep -q "k8s/bookstore-frontend-deployment.yaml"; then
            echo "REACT_DEPLOYMENT_CHANGED=true" >> $GITHUB_ENV
          fi

          if echo "$CHANGED_FILES" | grep -q "k8s/cart-service-deployment.yaml"; then
            echo "SPRING_DEPLOYMENT_CHANGED=true" >> $GITHUB_ENV
          fi

          if echo "$CHANGED_FILES" | grep -q "k8s/catalog-service-deployment.yaml"; then
            echo "CATALOG_DEPLOYMENT_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: üîë Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true

      - name: üõ† Set Up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: üõ† Install GKE Authentication Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: üõ† Configure Docker Authentication for GCR
        run: gcloud auth configure-docker gcr.io

      ### **Build Spring Boot JAR Files Before Dockerizing**
      - name: üèóÔ∏è Build Spring Boot Application (Cart Service)
        run: |
          cd cart-service
          chmod +x mvnw  # Ensure wrapper is executable
          ./mvnw clean package -DskipTests  # Build the JAR file
          ls -l target/  # Verify JAR file exists
          cd ..

      - name: üèóÔ∏è Build Spring Boot Application (Catalog Service)
        run: |
          cd catalog-service
          chmod +x mvnw  # Ensure wrapper is executable
          ./mvnw clean package -DskipTests  # Build the JAR file
          ls -l target/  # Verify JAR file exists
          cd ..

      # üèóÔ∏è Build and Push only if the service source code changed OR it's the first commit
      - name: üèóÔ∏è Build & Push React Frontend Docker Image
        if: env.REACT_CHANGED == 'true' || env.FULL_DEPLOYMENT == 'true'
        run: |
          docker build -t $REACT_IMAGE:$COMMIT_SHA ./bookstore-frontend
          docker push $REACT_IMAGE:$COMMIT_SHA

      - name: üèóÔ∏è Build & Push Spring Boot Backend (Cart Service) Docker Image
        if: env.SPRING_CHANGED == 'true' || env.FULL_DEPLOYMENT == 'true'
        run: |
          docker build --build-arg JAR_FILE=target/cart-service-0.0.1-SNAPSHOT.jar -t $SPRING_IMAGE:$COMMIT_SHA ./cart-service
          docker push $SPRING_IMAGE:$COMMIT_SHA

      - name: üèóÔ∏è Build & Push Catalog Service Docker Image
        if: env.CATALOG_CHANGED == 'true' || env.FULL_DEPLOYMENT == 'true'
        run: |
          docker build --build-arg JAR_FILE=target/catalog-service-0.0.1-SNAPSHOT.jar -t $CATALOG_IMAGE:$COMMIT_SHA ./catalog-service
          docker push $CATALOG_IMAGE:$COMMIT_SHA

      - name: üîó Get GKE Credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

      - name: üîé Verify Kubernetes Cluster Connection
        run: |
          kubectl cluster-info
          kubectl get nodes
          kubectl get pods --all-namespaces
          
      - name: üöÄ Deploy to GKE
        run: |
          if [ "${{ env.REACT_DEPLOYMENT_CHANGED }}" == "true" ]; then
          kubectl rollout restart deployment/bookstore-frontend
          kubectl rollout status deployment/bookstore-frontend
          fi

          if [ "${{ env.SPRING_DEPLOYMENT_CHANGED }}" == "true" ]; then
            kubectl rollout restart deployment/cart-service
            kubectl rollout status deployment/cart-service
          fi

          if [ "${{ env.CATALOG_DEPLOYMENT_CHANGED }}" == "true" ]; then
            kubectl rollout restart deployment/catalog-service
            kubectl rollout status deployment/catalog-service
          fi

      - name: üõ† Debug Kubernetes Pods & Logs
        if: failure()
        run: |
          kubectl get pods -A
          kubectl describe pods -A
          kubectl logs -l app=bookstore-frontend --tail=50
          kubectl logs -l app=cart-service --tail=50
          kubectl logs -l app=catalog-service --tail=50
